(defvar spacing 16)

(defwidget control []
  (eventbox :class 'control-lightbox'
            :onrightclick '${EWW_CMD} close control'
    (box :valign 'center'
         :halign 'center'
      (control-main))))

(defwidget control-main []
  (box :class 'control-main'
       :orientation 'horizontal'
       :spacing spacing
       :space-evenly false
    (control-left)
    (control-right)))

(defwidget control-left []
  (box :class 'control-left'
    :orientation 'vertical'
    :spacing spacing
    :space-evenly false
    :vexpand true
    (music)
    (box :orientation 'horizontal'
      :spacing spacing
      :space-evenly false
      (connections)
      (stats))))

(defwidget control-right []
  (box :class 'control-right'
    :orientation 'vertical'
    :spacing spacing
    :space-evenly false
    (power)
    (greeting)))

(defwidget music []
  (box :vexpand true (label :class 'control-widget' :text "Music")))

(defwidget stats []
  (box :class 'control-widget'
       :orientation 'vertical'
       :vexpand true 
       :hexpand true
    (backlight-slider)
    (volume-slider)
    (battery-slider)))

(defwidget slider [min max value color ?visible ?onchange]
  (box :class 'control-widget'
       :orientation 'horizontal'
       :hexpand true
       :space-evenly false
       :spacing 8
       :width 170
    (children)
    (scale :orientation 'horizontal'
           :valign 'center'
           :hexpand true
           :style 'color: ${color}'
           :min min
           :max max
           :value value
           :visible {visible ?: true}
           :onchange onchange
           :active {onchange != ""})))

(defwidget backlight-slider []
  (slider :color '#FF9E3B'
          :min 0.0
          :max 101.0
          :value backlight
          :onchange `scripts/backlight.fish set {}`
    (backlight-icon)))

(defwidget volume-slider []
  (slider :color '#957FB8' 
          :min 0.0 
          :max 101.0 
          :value {volume.level}
          :onchange `scripts/volume.fish set {}`
    (volume-icon)))

(defwidget battery-slider []
  (slider :visible {EWW_BATTERY != ""}
          :color {EWW_BATTERY.BAT1.status == 'Discharging' ? '#FFA066' : '#98BB6C'}
          :min 0.0
          :max 101.0
          :value {EWW_BATTERY.BAT1.capacity}
    (battery-icon)))

(defwidget connections []
  (box :orientation 'vertical'
       :vexpand true
       :spacing spacing
    (network-info)
    (bluetooth-info)))

(defwidget network-info []
  (connection :enabled {network != ''}
              :device {network == '' ? '' : network.name}
              :onclick 'scripts/network.fish toggle'
              :enabled-bg '#D27E99'
              :enabled-fg '#fff'
    (network-icon)))

(defwidget bluetooth-info []
  (connection :enabled {bluetooth.enabled}
              :device {bluetooth.device}
              :onclick 'scripts/bluetooth.fish toggle'
              :enabled-bg '#9CABCA'
              :enabled-fg '#000'
    (bluetooth-icon)))

(defwidget connection [enabled device enabled-bg enabled-fg ?onclick]
  (button :class 'control-widget connection no-hover ${enabled != false ? 'enabled' : ''}'
          :style {enabled ? "background-color: ${enabled-bg}; color: ${enabled-fg}" : ""}
          :onclick onclick
    (box :orientation 'horizontal'
         :space-evenly false
         :spacing 0
      (children)
      (box :class 'text'
           :orientation 'vertical'
           :hexpand true
           :valign 'center'
        (label :class 'status' 
               :halign 'start' 
               :text {enabled == true ? 'Enabled' : 'Disabled'})
        (label :class 'device' 
               :halign 'start' 
               :text {device == '' ? 'Not Connected' : device}))
      (icon :text '󰅂'))))

(defwidget power []
  (box :orientation 'vertical'
    :space-evenly true
    :spacing spacing
    :vexpand true
    (box :orientation 'horizontal'
      :space-evenly true
      :spacing spacing
      (powermenu-button :icon '󰍃' :action 'loginctl kill-session self' :tooltip 'Sign Out' :color '#D27E99')
      (powermenu-button :icon '󰤄' :action 'systemctl suspend' :tooltip 'Sleep' :color '#9CABCA'))
    (box :orientation 'horizontal'
      :space-evenly true
      :spacing spacing
      (powermenu-button :icon '󰜉' :action 'systemctl reboot' :tooltip 'Restart' :color '#DCA561')
      (powermenu-button :icon '󰐥' :action 'systemctl poweroff' :tooltip 'Power Off' :color '#C34043'))))
  
(defwidget powermenu-button [icon action tooltip color]
  (button :class 'control-widget powermenu-button'
          :onclick action
          :tooltip tooltip
          :style 'color: ${color}'
    (icon :size 2 :text icon)))
      

(defwidget greeting []
  (box :class 'control-widget greeting'
       :orientation 'vertical'
       :vexpand true
       :space-evenly false
       :spacing 4
    (label :class 'time' :text "${time.hour} ${time.minute}")
    (label :class 'date' :text date)))

